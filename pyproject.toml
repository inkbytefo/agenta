[tool.poetry]
name = "crewai-desktop"
version = "0.1.0"
description = "Desktop application for AI-powered development assistance using CrewAI"
authors = ["Development Team"]
readme = "README.md"
packages = [{include = "src"}]

[tool.poetry.dependencies]
python = "^3.9"
crewai = "^0.1.0"
pyyaml = "^6.0.1"
python-dotenv = "^1.0.0"
pydantic = "^2.0.0"
ratelimit = "^2.2.1"
aiohttp = "^3.9.0"
sphinx = "^7.0.0"
sphinx-rtd-theme = "^1.3.0"
sphinx-autodoc-typehints = "^1.24.0"

[tool.poetry.group.dev.dependencies]
black = "^23.0.0"
isort = "^5.12.0"
mypy = "^1.5.0"
pylint = "^3.0.0"
pytest = "^7.4.0"
pytest-asyncio = "^0.21.0"
pytest-cov = "^4.1.0"
pre-commit = "^3.3.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 100
target-version = ['py39']
include = '\.pyi?$'

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
check_untyped_defs = true

[tool.pylint.'MESSAGES CONTROL']
disable = [
    "C0111",  # missing-docstring
    "C0103",  # invalid-name
    "R0903",  # too-few-public-methods
]

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["src/backend/tests"]
python_files = ["test_*.py"]
addopts = "-v --cov=src/backend --cov-report=term-missing"

[tool.coverage.run]
source = ["src/backend"]
omit = ["src/backend/tests/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "pass",
]

[tool.poetry.scripts]
start = "src.backend.main:main"
test = "pytest:main"
