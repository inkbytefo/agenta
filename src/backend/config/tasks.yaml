analyze_prompt:
  description: >
    Analyze and enhance user input to create structured technical requirements.
    This includes identifying key components, technical requirements, constraints,
    and determining which agents should be involved in the implementation.
  expected_output: >
    Structured prompt with clear technical requirements, identified constraints,
    and recommended agent allocation. Includes context analysis and dependency mapping.
  agent: prompt_agent

enhance_requirements:
  description: >
    Take initial requirements and enhance them with technical details and context.
    This includes clarifying ambiguous points and adding implicit requirements
    that a technical implementation would need.
  expected_output: >
    Enhanced requirements document with technical specifications, clear constraints,
    and implementation considerations. Ready for technical team consumption.
  agent: prompt_agent

implement_code:
  description: >
    Implement or modify code according to the specified requirements.
    This includes writing new code, refactoring existing code, and
    ensuring proper integration with the existing codebase.
  expected_output: >
    Code implementation that meets requirements and follows best practices.
    Includes proper error handling, comments, and necessary tests.
  agent: code_agent

write_tests:
  description: >
    Create comprehensive tests for the implemented code.
    This includes unit tests, integration tests, and any necessary
    test utilities or mock objects.
  expected_output: >
    Complete test suite with high coverage and clear test cases.
    Tests should be well-documented and maintainable.
  agent: test_agent

create_documentation:
  description: >
    Create or update documentation for the implemented code.
    This includes function/method documentation, usage examples,
    and any necessary architectural documentation.
  expected_output: >
    Clear and comprehensive documentation that explains the code's
    purpose, usage, and any important considerations.
  agent: documentation_agent

review_changes:
  description: >
    Review code changes for quality, correctness, and adherence to
    best practices. Identify potential issues, suggest improvements,
    and ensure code meets project standards.
  expected_output: >
    Detailed review report highlighting issues, suggestions, and
    confirmation of code quality standards being met.
  agent: review_agent

coordinate_development:
  description: >
    Oversee and coordinate the entire development process.
    Break down complex tasks, assign work, and ensure smooth
    collaboration between team members.
  expected_output: >
    Coordinated execution of development tasks with clear progress
    tracking and issue resolution.
  agent: supervisor_agent
